name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Mac deps
      if: matrix.os == 'macos-latest'
      #run: brew install llvm libomp
      run: brew install gcc

    - name: Gen vcpkg
      run: ./vcpkg/bootstrap-vcpkg.sh

    - name: Run vcpkg
      run: ./vcpkg/vcpkg install hdf5 netcdf-c yaml-cpp zeromq

    - name: Create Build Environment unix
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: cmake -E make_directory build

    - name: Create Build Environment unix
      if: matrix.os == 'windows-latest'
      run: cmake -E make_directory build

    - name: Configure CMake unix
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      working-directory: build
      run: cmake -S .. -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DBUID_WITH_ZMQ=ON

    - name: Configure CMake mac
      if: matrix.os == 'macos-latest'
      shell: bash
      working-directory: build
      run: cmake -S .. -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DBUID_WITH_ZMQ=ON
      env:
        #CC: /usr/local/opt/llvm/bin/clang
        #CXX: /usr/local/opt/llvm/bin/clang++
        CC: /usr/local/opt/gcc@11/bin/gcc-11
        CXX: /usr/local/opt/gcc@11/bin/g++-11

    - name: Debugging windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        pwd
        ls
        ls build

    - name: Configure CMake windows
      if: matrix.os == 'windows-latest'
      shell: bash
      working-directory: build
      run: cmake -S .. -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake -DBUID_WITH_ZMQ=ON

    - name: Build-linux
      if: matrix.os == 'ubuntu-latest'
      working-directory: build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Build-mac
      if: matrix.os == 'macos-latest'
      working-directory: build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      env:
        #CC: /usr/local/opt/llvm/bin/clang
        #CXX: /usr/local/opt/llvm/bin/clang++
        CC: /usr/local/opt/gcc@11/bin/gcc-11
        CXX: /usr/local/opt/gcc@11/bin/g++-11

    - name: Build-windows
      if: matrix.os == 'windows-latest'
      working-directory: build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test-unix
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      working-directory: bin
      shell: bash
      run: ./xrf_maps --dir ../test/2_ID_E_dataset --fit roi

    - name: Test-windows
      if: matrix.os == 'windows-latest'
      working-directory: bin
      shell: bash
      run: ./xrf_maps --dir ..\test\2_ID_E_dataset --fit roi

    - uses: actions/upload-artifact@v2
      with:
        name: xrf_maps
        path: bin/xrf_maps
