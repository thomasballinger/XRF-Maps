name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
    - uses: lukka/get-cmake@latest
    - uses: lukka/run-vcpkg@v10
      with:
        runVcpkgInstall: true

    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Mac deps
      # Use gcc instead of clang because clang doens't have 
      # OpenMP support, and using gcc looked easier than
      # installing and configuring it
      if: matrix.os == 'macos-latest'
      run: brew install gcc@9 # matches default on linux

    - name: Create Build Environment unix
      run: cmake -E make_directory build

    - name: Configure CMake
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
      working-directory: build
      run: cmake -S .. -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DBUID_WITH_ZMQ=ON

    - name: Configure CMake mac
      if: matrix.os == 'macos-latest'
      working-directory: build
      run: cmake -S .. -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DBUID_WITH_ZMQ=ON
      env:
        #CC: /usr/local/opt/llvm/bin/clang
        #CXX: /usr/local/opt/llvm/bin/clang++
        CC: /usr/local/opt/gcc@9/bin/gcc-9
        CXX: /usr/local/opt/gcc@9/bin/g++-9

    - name: Build
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
      working-directory: build
      run: cmake --build . --config $BUILD_TYPE

    - name: Build-mac
      if: matrix.os == 'macos-latest'
      working-directory: build
      run: cmake --build . --config $BUILD_TYPE
      env:
        #CC: /usr/local/opt/llvm/bin/clang
        #CXX: /usr/local/opt/llvm/bin/clang++
        CC: /usr/local/opt/gcc@9/bin/gcc-9
        CXX: /usr/local/opt/gcc@9/bin/g++-9

    - name: Test
      working-directory: bin
      run: ./xrf_maps --dir ../test/2_ID_E_dataset --fit roi

    - uses: actions/upload-artifact@v2
      with:
        name: xrf_maps
        path: bin/xrf_maps
